# default config for wordpress
server {
    server_name example.com *.example.com;
    root /srv/wordpress/example.com;
    
    index index.php;

    location = /favicon.ico { log_not_found off; access_log off; }
    
    location = /robots.txt { allow all; log_not_found off; access_log off; }
    
    # deny all attempts to access hidden files such as .htaccess .htpasswd
    location ~ /\. { deny all; }
    
    # deny access to any files with .php extension in uploads directory
    location ~* /(?:uploads|files)/.*\.php$ { deny all; }

    # last attempt
    location / { try_files $uri $uri/ /index.php$args; }

    # add trailing slash to */wp-admin requests
    rewrite /wp-admin$ $scheme://$host$uri/ permanent;

    # Directives to send expires headers and turn off 404 error logging.
    location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
            access_log off; log_not_found off; expires max;
    }

    # Pass all .php files onto a php-fpm/php-fcgi server.
    location ~ [^/]\.php(/|$) {
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) { return 404; }

        # This is a robust solution for path info security issue and works with 
        # "cgi.fix_pathinfo = 1" in /etc/php.ini (default)

        include fastcgi_params;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fastcgi_intercept_errors on;
        fastcgi_pass php;
    }

    # Uncomment one of the lines below for the appropriate caching plugin (if used).
    #include conf.d/wordpress-wp-super-cache.conf;
    #include conf.d/wordpress-w3-total-cache.conf;
}
